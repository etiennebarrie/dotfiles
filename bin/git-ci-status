#!/usr/bin/env -S ruby --disable-all
require "json"

def self.`(argv) = super.chomp.tap { exit(false) unless Process.last_status.success? }
def usage = abort "usage: git ci-status [--context=context] [<revision>]"

if context_index = ARGV.index { |arg| arg.start_with?(/--context=?/) }
  context_option = ARGV.delete_at(context_index)
  _, context = context_option.split("=", 2)
  unless context
    usage if context_index >= ARGV.size
    context = ARGV.delete_at(context_index)
  end
end

commit = ARGV.shift || "@{u}"
usage unless ARGV.empty?
commit = %x(git rev-parse --verify --end-of-options "#{commit}")

statuses_json = %x(gh api repos/{owner}/{repo}/commits/#{commit}/status --paginate)
check_runs_json = %x(gh api repos/{owner}/{repo}/commits/#{commit}/check-runs --paginate)

statuses = JSON.parse(statuses_json, symbolize_names: true).fetch(:statuses)
statuses += JSON.parse(check_runs_json, symbolize_names: true).fetch(:check_runs)
  .map do |check_run|
    check_run => { status:, conclusion:, name:, html_url: }
    {
      state: status == "completed" ? conclusion : "pending",
      context: name,
      target_url: html_url,
    }
  end

def symbol_color(state)
  case state
  when "success"
    symbol = "✔︎"
    color = 32
  when "failure", "error", "action_required", "cancelled", "timed_out"
    symbol = "✖︎"
    color = 31
    @exit_status = 1
  when "neutral"
    symbol = "◦"
    color = 30
  when "pending"
    symbol = "●"
    color = 33
    @exit_status = 2
  end
  if @tty
    "\033[#{color}m#{symbol}\033[m"
  else
    state
  end
end

@tty = $stdout.tty?
@exit_status = 0

if context
  status = statuses.detect { _1[:context] == context }
  abort "no status with context or check run with name: #{context.inspect}" unless status
  status => { state:, target_url: }
  symbol_color(state)
  puts status.fetch(:target_url)
else
  context_length = statuses.map { _1[:context].size }.max
  statuses.each do |status|
    status => { state:, context:, target_url: }
    puts [
      symbol_color(state),
      context.then { @tty ? _1.ljust(context_length) : _1 },
      target_url,
    ].join("\t")
  end
end

exit(@exit_status)
