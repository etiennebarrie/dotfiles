#!/usr/bin/env ruby -S --disable-all
require "pathname"

def self.`(argv) = super.chomp.tap { exit(false) unless Process.last_status.success? }

git_dir = `git rev-parse --git-dir`
git_test = Pathname(git_dir.chomp).join("test")
abort ".git/test already configured" if git_test.exist?

top_level = Pathname(`git rev-parse --show-toplevel`.chomp)

require "yaml"
commands = Pathname.glob(top_level.join(".github/workflows/*.y{a,}ml")).flat_map do |workflow|
  YAML.load_file(workflow)["jobs"].flat_map do |_, job|
    next unless steps = job["steps"]
    steps.filter_map { |step| step["run"] }
  end
    .prepend("", "# #{workflow.basename(".yml")}")
end

if commands.empty? && top_level.join("Rakefile").exist?
  commands = ["bundle exec rake"]
  $stderr.puts "Rakefile present, using `#{commands.first}`."
end

abort "No test command found." unless commands.any?

git_test.write(["#!/bin/sh", "", "set -ex", *commands].flat_map { [_1, "\n"] }.join)
git_test.chmod(git_test.stat.mode + 0o100) # u+x
exec "$EDITOR #{git_test}"
