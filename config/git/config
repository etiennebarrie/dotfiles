[include]
	path = local
[color]
	ui = auto
[alias]
	an = add --intent-to-add
	ap = add --patch
	au = add --update
	br = branch
	ci = commit
	cia = commit --amend --no-edit
	ciaa = commit --amend --no-edit --reset-author
	cip = commit --patch
	cl = clean --force -d
	clbr = "!f() { git fetch --prune && git branch --merged origin/master | grep -v ^* | grep -v '^  master$' | xargs git branch -d && for branch in `git branch -vv | grep -v ^* | awk '/: gone]/ {print $1}'`; do git branch -D $branch; done }; f"
	co = checkout
	com = checkout origin/master -B master
	cp = cherry-pick
	cpa = cherry-pick --abort
	dc = diff --color-words --cached
	df = diff --color-words
	fe = fetch
	feco = "!f() { git fetch origin -f $1:$1 && git checkout $1; }; f"
	l = log --graph --decorate --all
	lb = "!f() { git log --reverse $(git merge-base @ origin/HEAD).. "${@:---patch}"; }; f"
	ma = merge --abort
	ol = log --pretty=oneline
	pf = push --force-with-lease
	pr  = "!f() { git fetch -fu ${2:-origin} refs/pull/$1/head:pr/$1 && git checkout pr/$1; }; f"
	pr-clean = "!git for-each-ref refs/heads/pr/* --format='%(refname)' | while read ref ; do branch=${ref#refs/heads/} ; git branch -D $branch ; done"
	pushu = push --set-upstream origin HEAD
	r = rebase
	ra = rebase --abort
	rc = rebase --continue
	ri = "!git rebase --interactive `git merge-base @ origin/master`"
	rii = "!GIT_EDITOR=true git rebase --interactive `git merge-base @ origin/master`"
	ro = rebase --onto
	rom = rebase origin/master
	rr = "!f() { GIT_EDITOR=true git rebase --interactive `git merge-base @ origin/master` --exec \"$*\"; }; f"
	rs = rebase --skip
	s = stash --include-untracked
	sha = "!f() { git rev-parse --default HEAD $* |tee /dev/tty |tr -d '\n' |pbcopy; }; f"
	sk = stash --include-untracked --keep-index
	sp = stash pop
	ss = show stash
	st = status -sb
	su = submodule update --init --recursive
	suu = "!f() { git submodule update --init --recursive --remote && git submodule summary; }; f"
	where-merged = "!f() { git log HEAD ^$@ --ancestry-path --merges --reverse --pretty=%H | head -1; }; f"
	x = !gitx
[fetch]
	prune = true
[push]
	default = upstream
[merge]
	ff = false
[pull]
	rebase = true
[branch]
	autosetupmerge = true
[advice]
	pushNonFastForward = false
	statusHints = false
	commitBeforeMerge = false
	resolveConflict = false
	detachedHead = false
[rerere]
	enabled = true
[diff]
	algorithm = minimal
	renames = true
[rebase]
	autosquash = true
	autostash = true
[help]
	autoCorrect = 1
[interactive]
	singlekey = true
[user]
	name = Étienne Barrié
	useconfigonly = true
[column]
	ui = auto row dense
[log]
	date = iso
[protocol]
	version = 2
[credential]
	helper = osxkeychain
[core]
	commitGraph = true
[gc]
	writeCommitGraph = true
